package

public trait JI {
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open fun test(): kotlin.String!
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

internal final class KCLass : JI {
    public constructor KCLass()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun test(): kotlin.String!
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

internal final class KTrait : JI {
    public constructor KTrait()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun test(): kotlin.String!
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
